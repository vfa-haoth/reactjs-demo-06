{"ast":null,"code":"import _toConsumableArray from \"/Users/macbook/Documents/ForStudy/season06-connect-api/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as types from './../constants/ActionTypes';\nvar initialState = [];\n\nvar findIndex = function findIndex(products, id) {\n  var result = -1;\n  products.forEach(function (product, index) {\n    if (product.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar products = function products() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index = -1;\n\n  switch (action.type) {\n    case types.FETCH_PRODUCTS:\n      state = action.products;\n      return _toConsumableArray(state);\n\n    case types.DELETE_PRODUCT:\n      index = findIndex(state, action.id);\n      state.splice(index, 1);\n      return _toConsumableArray(state);\n\n    case types.ADD_PRODUCT:\n      state.push(action.product);\n      return _toConsumableArray(state);\n\n    case types.UPDATE_PRODUCT:\n      index = findIndex(state, product.id);\n      state = action.product;\n      return _toConsumableArray(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default products;","map":{"version":3,"sources":["/Users/macbook/Documents/ForStudy/season06-connect-api/src/reducers/products.js"],"names":["types","initialState","findIndex","products","id","result","forEach","product","index","state","action","type","FETCH_PRODUCTS","DELETE_PRODUCT","splice","ADD_PRODUCT","push","UPDATE_PRODUCT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,EAAX,EAAkB;AAC9B,MAAIC,MAAM,GAAG,CAAC,CAAd;AAEAF,EAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACjC,QAAGD,OAAO,CAACH,EAAR,KAAeA,EAAlB,EAAqB;AACjBC,MAAAA,MAAM,GAAGG,KAAT;AACH;AACJ,GAJD;AAMA,SAAOH,MAAP;AACH,CAVD;;AAYA,IAAMF,QAAQ,GAAG,SAAXA,QAAW,GAAgC;AAAA,MAA/BM,KAA+B,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;AAC7C,MAAIF,KAAK,GAAG,CAAC,CAAb;;AACA,UAAOE,MAAM,CAACC,IAAd;AACI,SAAKX,KAAK,CAACY,cAAX;AACIH,MAAAA,KAAK,GAAGC,MAAM,CAACP,QAAf;AACA,gCAAWM,KAAX;;AACJ,SAAKT,KAAK,CAACa,cAAX;AACIL,MAAAA,KAAK,GAAGN,SAAS,CAACO,KAAD,EAAQC,MAAM,CAACN,EAAf,CAAjB;AACAK,MAAAA,KAAK,CAACK,MAAN,CAAaN,KAAb,EAAoB,CAApB;AACA,gCAAWC,KAAX;;AACJ,SAAKT,KAAK,CAACe,WAAX;AACIN,MAAAA,KAAK,CAACO,IAAN,CAAWN,MAAM,CAACH,OAAlB;AACA,gCAAWE,KAAX;;AACJ,SAAKT,KAAK,CAACiB,cAAX;AACIT,MAAAA,KAAK,GAAGN,SAAS,CAACO,KAAD,EAAQF,OAAO,CAACH,EAAhB,CAAjB;AACAK,MAAAA,KAAK,GAAGC,MAAM,CAACH,OAAf;AACA,gCAAWE,KAAX;;AACJ;AAAU,aAAOA,KAAP;AAfd;AAiBH,CAnBD;;AAqBA,eAAeN,QAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar initialState = [];\n\nvar findIndex = (products, id) => {\n    var result = -1;\n\n    products.forEach((product, index) => {\n        if(product.id === id){\n            result = index;\n        }\n    })\n\n    return result;\n}\n\nconst products = (state=initialState, action) => {\n    var index = -1;\n    switch(action.type){\n        case types.FETCH_PRODUCTS : \n            state = action.products;\n            return [...state];\n        case types.DELETE_PRODUCT :\n            index = findIndex(state, action.id)\n            state.splice(index, 1);\n            return [...state];\n        case types.ADD_PRODUCT :\n            state.push(action.product);\n            return [...state];\n        case types.UPDATE_PRODUCT :\n            index = findIndex(state, product.id)\n            state = action.product\n            return [...state];\n        default : return state;\n    }\n}\n\nexport default products;"]},"metadata":{},"sourceType":"module"}